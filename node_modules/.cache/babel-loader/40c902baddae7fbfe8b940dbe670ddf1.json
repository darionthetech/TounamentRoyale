{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jttsa\\\\Desktop\\\\TounamentRoyale\\\\src\\\\App.js\";\nimport React from 'react';\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  request: operation => {\n    const token = localStorage.getItem(\"id_token\");\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    });\n  },\n  uri: \"/graphql\"\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(MainContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jttsa/Desktop/TounamentRoyale/src/App.js"],"names":["React","ApolloClient","ApolloProvider","client","request","operation","token","localStorage","getItem","setContext","headers","authorization","uri","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,gBAA7C;;AACA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC5BG,EAAAA,OAAO,EAAGC,SAAD,IAAe;AACtB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AAEAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADU,KAArB;AAKD,GAT2B;AAU5BM,EAAAA,GAAG,EAAE;AAVuB,CAAjB,CAAf;;AAaE,SAASC,GAAT,GAAe;AACX,sBACI,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEV,MAAxB;AAAA,2BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQU,G;AASX,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\nimport { ApolloClient, ApolloProvider } from '@apollo/client';\r\nconst client = new ApolloClient({\r\n    request: (operation) => {\r\n      const token = localStorage.getItem(\"id_token\");\r\n  \r\n      operation.setContext({\r\n        headers: {\r\n          authorization: token ? `Bearer ${token}` : \"\",\r\n        },\r\n      });\r\n    },\r\n    uri: \"/graphql\",\r\n  });\r\n\r\n  function App() {\r\n      return (\r\n          <ApolloProvider client={client}>\r\n            <MainContainer />\r\n              \r\n          </ApolloProvider>\r\n      );\r\n  }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}